#!/usr/bin/env python

from ansible.module_utils.basic import *
import platform
import shlex

def main():
    module = AnsibleModule(argument_spec={},
                           supports_check_mode=True)

    ARCH = platform.machine()

    if ARCH in frozenset(['i486', 'i586', 'i686']):
        ARCH = 'i386'
    if ARCH in frozenset(['x86_64']):
        ARCH = 'amd64'

    OS = 'unknown'
    OSVERSION = 'unknown'

    system = platform.system()

    if 'Darwin' == system:
        OS = 'macosx'
        # 10.9.3 => 9
        OSVERSION = platform.mac_ver()[0].split('.', 2)[1].lower()
    elif 'Linux' == system:
        # ('CentOS', '6.8', 'Final')
        # ('Ubuntu', '16.04', 'xenial')
        dist = platform.linux_distribution()
        OS = dist[0].lower()
        if 0 == len(OS):
            with open('/etc/os-release', 'r') as file:
                for line in file.readlines():
                    for rec in shlex.split(line):
                        name, _, val = rec.partition('=')
                        if 'ID' == name:
                            OS = val
                        if 'VERSION_ID' == name:
                            OSVERSION = val
        elif OS in frozenset(['centos linux']):
            OS = 'centos'
            OSVERSION = dist[1].split('.', 1)[0].lower()
        elif OS in frozenset(['centos', 'ubuntu']):
            OSVERSION = dist[1].split('.', 1)[0].lower()
        else:
            OSVERSION = dist[1].lower()
    elif 'Windows' == system:
        dist = platform.win32_ver()
        OS = dist[0].lower()
        OSVERSION = dist[1].lower()

    FAMILY = OS
    if OS in frozenset(['centos']):
        FAMILY = 'redhat'
    elif OS in frozenset(['ubuntu']):
        FAMILY = 'debian'

    ansible_facts = dict(arch=ARCH,
                         family=FAMILY,
                         platform='%s-%s' % (OS, OSVERSION))
    module.exit_json(changed=False, ansible_facts=ansible_facts)


if __name__ == '__main__':
    main()
